name: my-tests

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2 

    # Установка Poetry
    - name: Install Poetry
      run: |
        # Скачиваем и устанавливаем инструмент Poetry
        curl -sSL https://install.python-poetry.org | python3 -
        # Добавляем путь к установленному Poetry в переменную окружения PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    # Установка зависимостей
    - name: Install dependencies
      run: |
        # Устанавливаем зависимости проекта через Poetry
        poetry install

    # Запуск линтера
    - name: Run make lint
      run: |
        # Запускаем линтер кода через make команду
        make lint

    # Запуск тестов и запись кода завершения
    - name: Run pytest and record exit status
      run: |
        # Запускаем тесты и создаем отчет о покрытии кода
        poetry run pytest --cov=gendiff --cov-report xml
        # Сохраняем код завершения pytest для использования в последующих шагах
        echo "PYTEST_EXIT_CODE=$?" > $GITHUB_ENV

    # Настройка Code Climate test reporter
    - name: Set up Code Climate test reporter
      run: |
        # Скачиваем Code Climate test reporter
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        # Делаем скачанный файл исполняемым
        chmod +x ./cc-test-reporter
        # Инициализируем отчетность перед выполнением тестов
        ./cc-test-reporter before-build

    # Отправка данных о покрытии кода
    - name: Test & publish code coverage
      if: github.ref_name == 'main'
      run: |
        # Запускаем Code Climate test reporter после выполнения тестов для отправки данных о покрытии кода
        ./cc-test-reporter after-build --exit-code ${{ env.PYTEST_EXIT_CODE }} -t coverage.py
      env:
        # Устанавливаем ID репортера из секретов репозитория
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
